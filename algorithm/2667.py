# -*- coding: utf-8 -*-
"""2667.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RnxkVJRc6lC0p6vOrr3DSldDyB4sLOuX
"""

# 2667
# https://www.acmicpc.net/problem/2667

# dfs

house_cnt = 0
house_cnt_list = []

def dfs(x, y):
  global house_cnt
  if x<= -1 or x>=n or y<=-1 or y >=n:
    return False
  if graph[x][y] == 1: # 1이 집이 있는 곳이니까 여기를 카운트해야함
    graph[x][y] = 0 # 집을 셌으면 0으로 바꿔줘서 방문할 필요없도록
    house_cnt += 1
    dfs(x-1, y) #  상
    dfs(x, y-1) # 좌
    dfs(x+1, y) # 하
    dfs(x, y+1) # 우
    return True
  return False 

n = int(input())
graph = []
for i in range(n):
  graph.append(list(map(int, input())))

village = 0

for i in range(n):
  for j in range(n):
    if dfs(i, j) == True:
      village +=1
      house_cnt_list.append(house_cnt)
      house_cnt = 0

# 단지 내 집의 수를 오름차순으로 정렬하기
house_cnt_list.sort()

print(village)
for i in house_cnt_list:
  print(i)